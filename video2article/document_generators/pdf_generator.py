import logging
import os

from video2article.utils.types import Contents, ContentType
from video2article.utils.config import Config
from weasyprint import CSS, HTML
from weasyprint.text.fonts import FontConfiguration


class PDFGenerator:
    def __init__(self, config: Config):
        self.config = config
        self.project_folder = str(config.project_folder)

    def generate_document(self, file_name: str, contents: Contents):
        logging.info("Generating PDF document")
        try:
            html_content = self._create_html_content(contents)
            styled_html = self._wrap_html_with_style(html_content)

            output_dir = self.project_folder
            output_file = os.path.join(output_dir, f"{file_name}.pdf")

            font_config = FontConfiguration()
            HTML(string=styled_html, base_url=output_dir).write_pdf(
                output_file,
                font_config=font_config,
                stylesheets=[CSS(
                        string=f"""
                                 @page {{ 
                                    size: {210}mm {1485}mm;
                                    margin: 0.5cm;
                                }}
                        """)],)

            logging.info(f"PDF document generated successfully: {output_file}")
            return output_file
        except Exception as e:
            logging.error(f"Error generating PDF document: {str(e)}")
            raise

    def _create_html_content(self, contents: Contents) -> str:
        html = f"""<h1>{self.config.video_title}</h1>
"""

        # Add summary if available
        if contents.summary:
            html += f"""
<div class="summary">
    <h2>Summary</h2>
    <p>{contents.summary}</p>
</div>
"""

        # Add table of contents if chapters are available
        if contents.chapters:
            html += """
<div class="toc">
    <h2>Table of Contents</h2>
    <ul>
"""
            for chapter in contents.chapters:
                html += f'        <li><a href="#chapter-{contents.chapters.index(chapter)}">{chapter["title"]}</a></li>\n'
            html += "    </ul>\n</div>\n"

            html += """
<div class="disclaimer">
    <p>This document was generated by Video2Article. Some content may not be accurate.</p>
</div>
"""

        html += "<hr>\n"

        # Add main content with chapters
        current_chapter_index = 0
        current_text_index = 0

        # First, process all text content to determine chapter boundaries
        text_indices = []
        for content in contents.get_contents():
            if content.type == ContentType.TEXT:
                text_indices.append(current_text_index)
                current_text_index += 1

        # Reset indices for actual content generation
        current_chapter_index = 0
        current_text_index = 0

        for content in contents.get_contents():
            if content.type == ContentType.TEXT:
                # Add chapter header if needed
                if contents.chapters and current_chapter_index < len(contents.chapters):
                    chapter = contents.chapters[current_chapter_index]
                    if current_text_index == chapter["start_index"]:
                        html += f'<h2 id="chapter-{current_chapter_index}">{chapter["title"]}</h2>\n'
                    if current_text_index == chapter["end_index"]:
                        current_chapter_index += 1

                html += f"<p>{content.value}</p>\n"
                current_text_index += 1
            elif content.type == ContentType.IMAGE:
                html += f'<img src="thumbnails/thumbnail_{content.value}.jpg" alt="Thumbnail {content.value}">\n'

        return html

    def _wrap_html_with_style(self, html_content: str) -> str:
        return f"""
        <html lang="{self.config.target_language}" dir="{ 'rtl' if self.config.target_language == 'ar' else 'ltr' }">
        <head>
            <style>
                @font-face {{
                    font-family: 'EmojiFont';
                    src: local('Noto Color Emoji');
                    unicode-range:
                        U+2600-26FF,
                        U+2700-27BF,
                        U+1F300-1F5FF,
                        U+1F600-1F64F,
                        U+1F680-1F6FF,
                        U+1F900-1F9FF,
                        U+1FA70-1FAFF,
                        U+1F1E6-1F1FF;
                }}

                body {{
                    font-family: 
                        "Noto Sans CJK JP",
                        "Noto Sans CJK SC",
                        "Noto Sans CJK KR",
                        "Noto Sans Arabic",
                        "Noto Sans Devanagari",
                        "Noto Sans",
                        "EmojiFont",
                        sans-serif;
                    font-size: 10pt;
                    letter-spacing: normal;
                    line-height: 1.6em;
                }}
                h1 strong {{ font-weight: inherit; }}

                h1 {{
                    font-size: 18pt;
                    margin-bottom: 1em;
                    line-height: 1.5em;
                }}
                h2 {{
                    font-size: 14pt;
                    margin-top: 1em;
                    margin-bottom: 1em;
                }}
                .summary {{
                    background-color: #f5f5f5;
                    padding: 0.5em 1em;
                    margin: 1em 0;
                    border-radius: 5px;
                }}
                .toc {{
                    direction: ltr;
                    text-align: left;
                    margin: 1.5em 0;
                }}
                .toc ul {{
                    list-style-type: none;
                    padding-left: 1.5em;
                    margin-left: 0;
                }}
                .toc li {{
                    margin: 0.8em 0;
                    position: relative;
                }}
                .toc li::before {{
                    content: "â€¢";
                    position: absolute;
                    left: -1.2em;
                    color: #4a90e2;
                    font-size: 1.2em;
                }}
                .toc a {{
                    text-decoration: none;
                    color: #4a6da7;
                    font-size: 0.95em;
                    border-bottom: 1px solid #e0e0e0;
                    padding-bottom: 3px;
                }}
                .disclaimer {{
                    color: #666;
                }}
                hr {{
                    border: none;
                    height: 1px;
                    background-color: #e0e0e0;
                    margin: 1em 0;
                }}
                img {{
                    max-width: 80%;
                    height: auto;
                    display: block;
                    margin: 1em auto;
                }}
                p {{
                    /* margin-bottom: 0.8em; */
                }}
            </style>
        </head>
        <body>
            {html_content}
        </body>
        </html>
        """
